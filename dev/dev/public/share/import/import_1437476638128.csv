worker_stations,id,staff_code,last_name,first_name,last_name_kana,first_name_kana,nickname,profile_image_url,birthday,zip_code,sex,address1,address2,address3,gps_data,email_address,login_password,tel,payee_type,account_type,account_number,account_name,demain,profile_comment,name_say,name_mei,is_receive_notify,recover_password,sort_order,create_date,update_date,update_by,is_delete,is_hidden,frequency_id,area_id,prefecture_id,bank_branch_id,constructor,toObject,save,destroy,_defineAssociations,_normalizeAssociations,_cast,validate,toJSON
,58,K1fsBiLLlWaDv5dGXIRlyw==,childhood,childhood,childhood,childhood,childhood,,Thu Jul 16 2015 07:00:00 GMT+0700 (SE Asia Standard Time),,,tokyo,tokyo,,,sdfdsf@fsdf.sdf,2e85ddd5edee4e3793dab5ebf64ab43a7ec697ce,2312332123432,,,,,This is childhood,,,,1,0,0,,,anonymous,false,false,,1,10,,"function (){ return parent.apply(this, arguments); }","function () {
      return new defaultMethods.toObject(context, this);
    }","function (cb) {
      return new defaultMethods.save(context, this, cb);
    }","function (cb) {
      return new defaultMethods.destroy(context, this, cb);
    }","function () {
      new internalMethods.defineAssociations(context, this);
    }","function () {
      new internalMethods.normalizeAssociations(context, this);
    }","function (values) {
      _.keys(context._attributes).forEach(function(key) {
        var type = context._attributes[key].type;

        // Attempt to parse Array or JSON type
        if(type === 'array' || type === 'json') {
          if(!_.isString(values[key])) return;
          try {
            values[key] = JSON.parse(values[key]);
          } catch(e) {
            return;
          }
        }

        // Convert booleans back to true/false
        if(type === 'boolean') {
          var val = values[key];
          if(val === 0) values[key] = false;
          if(val === 1) values[key] = true;
        }

      });
    }","function (cb) {
      // Collect current values
      var values = this.toObject();

      if(cb) {
        context.validate(values, function(err) {
          if(err) return cb(err);
          cb();
        });
        return;
      }

      else {
        return new Bluebird(function (resolve, reject) {
          context.validate(values, function(err) {
            if(err) return reject(err);
            resolve();
          });
        });
      }
    }","function () {
    var obj = this.toObject();

    if (protectedAttributes.length) {
      _.each(protectedAttributes, function(key) {
        delete obj[key];
      });
    }

    // Remove toJSON from the result, to prevent infinite recursion with
    // msgpack or other recursive object transformation tools.
    //
    // Causes issues if set to null and will error in Sails if we delete it because blueprints call it.
    //
    // obj.toJSON = null;

    return obj;
  }"
,117,1111,111111,1111,11111,11111,,,Thu Jul 21 2016 07:00:00 GMT+0700 (SE Asia Standard Time),,MAL,11111,11111,,,1111@inte.co.jp,2e85ddd5edee4e3793dab5ebf64ab43a7ec697ce,11111111,,,,,111111,,,,1,0,0,,,anonymous,false,false,,1,16,,"function (){ return parent.apply(this, arguments); }","function () {
      return new defaultMethods.toObject(context, this);
    }","function (cb) {
      return new defaultMethods.save(context, this, cb);
    }","function (cb) {
      return new defaultMethods.destroy(context, this, cb);
    }","function () {
      new internalMethods.defineAssociations(context, this);
    }","function () {
      new internalMethods.normalizeAssociations(context, this);
    }","function (values) {
      _.keys(context._attributes).forEach(function(key) {
        var type = context._attributes[key].type;

        // Attempt to parse Array or JSON type
        if(type === 'array' || type === 'json') {
          if(!_.isString(values[key])) return;
          try {
            values[key] = JSON.parse(values[key]);
          } catch(e) {
            return;
          }
        }

        // Convert booleans back to true/false
        if(type === 'boolean') {
          var val = values[key];
          if(val === 0) values[key] = false;
          if(val === 1) values[key] = true;
        }

      });
    }","function (cb) {
      // Collect current values
      var values = this.toObject();

      if(cb) {
        context.validate(values, function(err) {
          if(err) return cb(err);
          cb();
        });
        return;
      }

      else {
        return new Bluebird(function (resolve, reject) {
          context.validate(values, function(err) {
            if(err) return reject(err);
            resolve();
          });
        });
      }
    }","function () {
    var obj = this.toObject();

    if (protectedAttributes.length) {
      _.each(protectedAttributes, function(key) {
        delete obj[key];
      });
    }

    // Remove toJSON from the result, to prevent infinite recursion with
    // msgpack or other recursive object transformation tools.
    //
    // Causes issues if set to null and will error in Sails if we delete it because blueprints call it.
    //
    // obj.toJSON = null;

    return obj;
  }"